<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;
use Step2Dev\LazyCart\Models\Cart;
use Step2Dev\LazyCart\Models\CartItem;
use Step2Dev\LazyCart\Support\ModelTableResolver;

return new class extends Migration {
    protected $modelTableResolver;
    protected string $userModel;
    protected string $cartModel;
    protected string $cartItemModel;
    protected string $cartTable;
    Protected string $cartItemTable;

    public function __construct()
    {
        /** @var  ModelTableResolver $modelTableResolver */
        $modelTableResolver = app(ModelTableResolver::class);
        $this->modelTableResolver = $modelTableResolver;
        $this->userModel = $this->modelTableResolver->getUserModel();
        $this->cartModel = $this->modelTableResolver->getCartClass();
        $this->cartItemModel = $this->modelTableResolver->getCartItemClass();
        $this->cartTable = $this->modelTableResolver->getCartTable();
        $this->cartItemTable = $this->modelTableResolver->getCartItemTable();
    }

    public function up()
    {
        Schema::create($this->cartTable, function (Blueprint $table) {
            $table->id();
            $table->foreignIdFor($this->userModel)->nullable()->constrained()->cascadeOnDelete();
            $table->string('session_id')->nullable()->index();
            $table->timestamps();
        });

        Schema::create($this->cartItemTable, function (Blueprint $table) {
            $table->id();
            $table->foreignIdFor($this->cartItemModel)->constrained()->cascadeOnDelete();
            $table->morphs('itemable');
            $table->unsignedInteger('quantity');
            $table->json('options')->default('[]');
            $table->timestamps();
        });
    }

    public function down()
    {
        Schema::dropIfExists($this->cartItemModel);
        Schema::dropIfExists($this->cartTable);
    }
};
